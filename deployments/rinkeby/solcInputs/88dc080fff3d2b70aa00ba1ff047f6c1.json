{
  "language": "Solidity",
  "sources": {
    "contracts/CheapBuyer.sol": {
      "content": "//SPDX-License-Identifier: MIT\n\npragma solidity 0.6.0;\n\ninterface Buyer {\n  function price() external view returns (uint256);\n}\n\ncontract CheapBuyer is Buyer {\n  address shop = 0x6e305577EeA5F42D57EB15b50214C739F5AeB320;\n\n  function price() external view override returns (uint256) {\n    uint256 _price = 200;\n    _price -= 100;\n    return _price;\n  }\n\n  function _buy() public returns (bool success) {\n    (success, ) = shop.call(abi.encodeWithSignature(\"buy()\"));\n    require(success, \"Could not buy.\");\n  }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}